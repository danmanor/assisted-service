// Code generated by go-swagger; DO NOT EDIT.

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2ListReleaseSourcesOKCode is the HTTP code returned for type V2ListReleaseSourcesOK
const V2ListReleaseSourcesOKCode int = 200

/*
V2ListReleaseSourcesOK Success.

swagger:response v2ListReleaseSourcesOK
*/
type V2ListReleaseSourcesOK struct {

	/*
	  In: Body
	*/
	Payload models.ReleaseSources `json:"body,omitempty"`
}

// NewV2ListReleaseSourcesOK creates V2ListReleaseSourcesOK with default headers values
func NewV2ListReleaseSourcesOK() *V2ListReleaseSourcesOK {

	return &V2ListReleaseSourcesOK{}
}

// WithPayload adds the payload to the v2 list release sources o k response
func (o *V2ListReleaseSourcesOK) WithPayload(payload models.ReleaseSources) *V2ListReleaseSourcesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list release sources o k response
func (o *V2ListReleaseSourcesOK) SetPayload(payload models.ReleaseSources) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListReleaseSourcesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.ReleaseSources{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// V2ListReleaseSourcesBadRequestCode is the HTTP code returned for type V2ListReleaseSourcesBadRequest
const V2ListReleaseSourcesBadRequestCode int = 400

/*
V2ListReleaseSourcesBadRequest Bad Request

swagger:response v2ListReleaseSourcesBadRequest
*/
type V2ListReleaseSourcesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListReleaseSourcesBadRequest creates V2ListReleaseSourcesBadRequest with default headers values
func NewV2ListReleaseSourcesBadRequest() *V2ListReleaseSourcesBadRequest {

	return &V2ListReleaseSourcesBadRequest{}
}

// WithPayload adds the payload to the v2 list release sources bad request response
func (o *V2ListReleaseSourcesBadRequest) WithPayload(payload *models.Error) *V2ListReleaseSourcesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list release sources bad request response
func (o *V2ListReleaseSourcesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListReleaseSourcesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListReleaseSourcesInternalServerErrorCode is the HTTP code returned for type V2ListReleaseSourcesInternalServerError
const V2ListReleaseSourcesInternalServerErrorCode int = 500

/*
V2ListReleaseSourcesInternalServerError Error.

swagger:response v2ListReleaseSourcesInternalServerError
*/
type V2ListReleaseSourcesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListReleaseSourcesInternalServerError creates V2ListReleaseSourcesInternalServerError with default headers values
func NewV2ListReleaseSourcesInternalServerError() *V2ListReleaseSourcesInternalServerError {

	return &V2ListReleaseSourcesInternalServerError{}
}

// WithPayload adds the payload to the v2 list release sources internal server error response
func (o *V2ListReleaseSourcesInternalServerError) WithPayload(payload *models.Error) *V2ListReleaseSourcesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list release sources internal server error response
func (o *V2ListReleaseSourcesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListReleaseSourcesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListReleaseSourcesServiceUnavailableCode is the HTTP code returned for type V2ListReleaseSourcesServiceUnavailable
const V2ListReleaseSourcesServiceUnavailableCode int = 503

/*
V2ListReleaseSourcesServiceUnavailable Unavailable.

swagger:response v2ListReleaseSourcesServiceUnavailable
*/
type V2ListReleaseSourcesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListReleaseSourcesServiceUnavailable creates V2ListReleaseSourcesServiceUnavailable with default headers values
func NewV2ListReleaseSourcesServiceUnavailable() *V2ListReleaseSourcesServiceUnavailable {

	return &V2ListReleaseSourcesServiceUnavailable{}
}

// WithPayload adds the payload to the v2 list release sources service unavailable response
func (o *V2ListReleaseSourcesServiceUnavailable) WithPayload(payload *models.Error) *V2ListReleaseSourcesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list release sources service unavailable response
func (o *V2ListReleaseSourcesServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListReleaseSourcesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
